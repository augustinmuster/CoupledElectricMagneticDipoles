#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize a4paper
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 2cm
\topmargin 2cm
\rightmargin 2cm
\bottommargin 2cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title

\series bold
Notes on DDA0.1
\end_layout

\begin_layout Author
Augustin Muster
\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Section
DDA method description
\begin_inset ERT
status open

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Lattice and polarisabilities
\end_layout

\begin_layout Standard
Let us consider a solid of volume 
\begin_inset Formula $V$
\end_inset

 discretized in 
\begin_inset Formula $N$
\end_inset

 dipoles on a cubic lattice (of lattice parameter 
\begin_inset Formula $d$
\end_inset

) with dielectric tensor 
\begin_inset Formula $\varepsilon(\boldsymbol{r})$
\end_inset

 in a homogoneous medium with dielectric constant 
\begin_inset Formula $\varepsilon_{h}$
\end_inset

such that
\begin_inset Formula 
\begin{equation}
V=Nd³.
\end{equation}

\end_inset

Each dipole is associated with his position 
\begin_inset Formula $\boldsymbol{r_{n}}$
\end_inset

, 
\begin_inset Formula $n=1,...,N$
\end_inset

and his quaisitatic polarisability tensor defined by
\begin_inset Formula 
\begin{equation}
\boldsymbol{\alpha}_{n0}=(\epsilon(\boldsymbol{r_{n}})-\epsilon_{h}I)((\epsilon(\boldsymbol{r_{n}})-\epsilon_{h}I)+\boldsymbol{L_{n}^{-1}}\epsilon_{h})^{-1}\boldsymbol{L_{n}^{-1}}V_{n},\label{eq:quasis}
\end{equation}

\end_inset

where 
\begin_inset Formula $\boldsymbol{I}$
\end_inset

 ^is the identy matrix, 
\begin_inset Formula $V_{n}=d³$
\end_inset

 is the volume of a discretization unit and 
\begin_inset Formula $\boldsymbol{L_{n}}$
\end_inset

is the depolarisation tensor defined as
\begin_inset Formula 
\begin{equation}
[\boldsymbol{L}_{n}]_{ij}=\delta_{ij}\frac{1}{3}\label{eq:depol}
\end{equation}

\end_inset

for a cube.
 A radiative correction of the polarisability has to be taken into account.
 With this correction, the polarisability tensor 
\begin_inset Formula $\boldsymbol{\alpha}_{n}$
\end_inset

 now reads7
\begin_inset Formula 
\begin{equation}
\boldsymbol{\alpha}_{n}=\left(\boldsymbol{\alpha}_{n0}^{-1}-i\frac{k³}{6\pi}\right)^{-1},\label{eq:radiative}
\end{equation}

\end_inset

where 
\begin_inset Formula $k$
\end_inset

 is the wavenumber of the incident wave.
\end_layout

\begin_layout Subsection
Scattering
\end_layout

\begin_layout Standard
Let us consider that the solid is illuminated by an inciedent field 
\begin_inset Formula $\boldsymbol{E}_{0}(\boldsymbol{r})$
\end_inset

 the field 
\begin_inset Formula $\boldsymbol{E}_{exc}(\boldsymbol{r}_{n})$
\end_inset

 extiting the nth dipole is equal to the incident field plus the contribution
 of the other dipoles, i.e.
 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\boldsymbol{E}_{exc}(\boldsymbol{r}_{n})=\boldsymbol{E}_{0}(\boldsymbol{r}_{n})+k²\sum_{m\neq n}^{N}\boldsymbol{G}(\boldsymbol{r}_{n},\boldsymbol{r}_{m})\boldsymbol{\alpha}_{m}\boldsymbol{E}_{exc}(\boldsymbol{r}_{m}),
\end{equation}

\end_inset

where 
\begin_inset Formula $\boldsymbol{G}(\boldsymbol{r}_{n},\boldsymbol{r}_{m})$
\end_inset

 is the green tensor which reads
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\boldsymbol{G}(\boldsymbol{r}_{n},\boldsymbol{r}_{m})=\frac{\exp(ikR)}{4\pi R}\left(\left(1+\frac{i}{kR}-\frac{1}{k²R²}\right)\boldsymbol{I}-\left(1+\frac{3i}{kR}-\frac{3}{k²R²}\right)\frac{\boldsymbol{R}\otimes\boldsymbol{R}}{R²}\right),\label{eq:Gtensor}
\end{equation}

\end_inset

with 
\begin_inset Formula $\boldsymbol{R}=\boldsymbol{r}_{n}-\boldsymbol{r}_{m}$
\end_inset

, 
\begin_inset Formula $R=|\boldsymbol{R}|$
\end_inset

.
 This equation in then just a big system of 3N linear equations that reads
 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\begin{bmatrix}\boldsymbol{I} & \dots & -k²\boldsymbol{G}(\boldsymbol{r}_{1},\boldsymbol{r}_{N})\boldsymbol{\alpha}\\
\vdots & \ddots & \vdots\\
-k²\boldsymbol{G}(\boldsymbol{r}_{N},\boldsymbol{r}_{1})1 & \dots & \boldsymbol{I}
\end{bmatrix}\left[\begin{array}{c}
\boldsymbol{E}_{exc}(\boldsymbol{r}_{1})\\
\vdots\\
\boldsymbol{E}_{exc}(\boldsymbol{r}_{N})
\end{array}\right]=\left[\begin{array}{c}
\boldsymbol{E}_{0}(\boldsymbol{r}_{1})\\
\vdots\\
\boldsymbol{E}_{0}(\boldsymbol{r}_{N})
\end{array}\right]\label{eq:DDAeq}
\end{equation}

\end_inset

that can be solved in order to get the 
\begin_inset Formula $\boldsymbol{E}_{exc}(\boldsymbol{r}_{n})$
\end_inset

.
 Using this, the polarizations of each dipole can be computed using 
\begin_inset Formula $\boldsymbol{P}_{n}=\boldsymbol{\alpha}_{n}\boldsymbol{E}_{exc}(\boldsymbol{r}_{n})$
\end_inset


\end_layout

\begin_layout Subsection
Cross sections calculations
\end_layout

\begin_layout Standard
Then, the extinction, absorbtion and scattering cross section 
\begin_inset Formula $\sigma_{ext},\sigma_{abs},\sigma_{sca}$
\end_inset

 (that follows 
\begin_inset Formula $\sigma_{ext}=\sigma_{abs}+\sigma_{sca}$
\end_inset

) can be comuted using (considerning that the incident field is a plane
 wave 
\begin_inset Formula $\boldsymbol{E}_{0}(\boldsymbol{r})=\boldsymbol{E}_{0}\exp(ikr)$
\end_inset

))
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\sigma_{ext}=\frac{k}{\epsilon_{h}|\boldsymbol{E}_{o}|²}\sum_{n=1}^{N}Im(\boldsymbol{E}_{0}^{*}(\boldsymbol{r})\cdot\boldsymbol{P}_{n})
\end{equation}

\end_inset


\begin_inset Formula 
\begin{equation}
\sigma_{sca}=\frac{k³}{\epsilon_{h}²|\boldsymbol{E}_{o}|²}\sum_{n,m=1}^{N}\boldsymbol{P}_{n}^{*}\cdot Im(\boldsymbol{G}(\boldsymbol{r}_{n},\boldsymbol{r}_{m}))\boldsymbol{P}_{n}
\end{equation}

\end_inset


\begin_inset Formula 
\begin{equation}
\sigma_{abs}=\frac{k}{\epsilon_{h}²|\boldsymbol{E}_{o}|²}\sum_{n=1}^{N}Im(\boldsymbol{P}_{n}\cdot(\boldsymbol{\alpha}_{n0}\boldsymbol{P}_{n})^{*})
\end{equation}

\end_inset


\end_layout

\begin_layout Section
DDA0.1 documentation
\end_layout

\begin_layout Standard
The code is divided in several modules that can be easily inculded in other
 modules and easily extended.
 The core functionalities of the DDA are in impolemented in the 
\series bold
DDA.jl.
 
\series default
This code as well as all the others module providing side- but essential
 functionalities are describet in this section.
\end_layout

\begin_layout Subsection
DDA.jl
\end_layout

\begin_layout Standard
DDA.jl contains the core functionalyty of the DDA, i.e.
 the functions to compute the green tensor and solve the linear system of
 equations.
 These functions are availeble either in a normal or 
\begin_inset Quotes eld
\end_inset

dimensionless
\begin_inset Quotes erd
\end_inset

 version.
 They are the following.
\end_layout

\begin_layout Subsubsection
solve_DDA()
\end_layout

\begin_layout Standard

\series bold
solve_DDA(knorm, r, alpha, input_field::Function ; output="polarisations",
 solver="LU", verbose=true)
\end_layout

\begin_layout Standard
This function generate the DDA equations systems (equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:DDAeq"
plural "false"
caps "false"
noprefix "false"

\end_inset

)) and solve it in order to output the polarisations 
\begin_inset Formula $\boldsymbol{P}_{n}$
\end_inset

or the inverse of the linear equation matrix 
\begin_inset Formula $A^{-1}$
\end_inset

.
\end_layout

\begin_layout Paragraph
Arguments
\end_layout

\begin_layout Itemize

\series bold
knorm: 
\series default
norm of the k vector (real scalar).
\end_layout

\begin_layout Itemize

\series bold
r: 
\series default
real array containing all the (3d) position vectors of the dipoles.
\end_layout

\begin_layout Itemize

\series bold
alpha: 
\series default
complex array containing all the (3x3) polarisability tensor of each dipole.
\end_layout

\begin_layout Itemize

\series bold
input_field: 
\series default
pointer to a function that will generate the input field this function haa.
\end_layout

\begin_layout Itemize

\series bold
output 
\series default
(facultative): it can takes two values: 
\begin_inset Quotes eld
\end_inset

polaristions
\begin_inset Quotes erd
\end_inset

 (the function returns the 
\begin_inset Formula $\boldsymbol{P}_{n}$
\end_inset

) or 
\begin_inset Quotes eld
\end_inset

matrix
\begin_inset Quotes erd
\end_inset

 (the functiuons return the 
\begin_inset Formula $A^{-1}$
\end_inset

).
 By default set to 
\begin_inset Quotes eld
\end_inset

polarisations
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Itemize

\series bold
solver 
\series default
(facultative): indication on which solver to use to solve the equations.
 There is yet only one possibility: 
\begin_inset Quotes eld
\end_inset

LU
\begin_inset Quotes erd
\end_inset

 (use the LU decomposition of LAPACK).
\end_layout

\begin_layout Itemize

\series bold
verbose 
\series default
(facultative): whether to print everything or not.
 By default set to 
\begin_inset Quotes eld
\end_inset

true
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Paragraph
Outputs
\end_layout

\begin_layout Standard
An array of size (N,3) with the polarisations 
\begin_inset Formula $\boldsymbol{P}_{n}$
\end_inset

 or the inverse of the (3N*3N) linear equation matrix 
\begin_inset Formula $A^{-1}$
\end_inset

 (dependint on the 
\series bold
output 
\series default
parameter).
\end_layout

\begin_layout Subsubsection
green()
\end_layout

\begin_layout Standard

\series bold
green(r1, r2, knorm)
\end_layout

\begin_layout Standard
This function computes the green tensor using equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:Gtensor"
plural "false"
caps "false"
noprefix "false"

\end_inset

).
\end_layout

\begin_layout Paragraph
Arguments
\end_layout

\begin_layout Itemize

\series bold
r1: 
\series default
position of the first dipole (3d vector)
\end_layout

\begin_layout Itemize

\series bold
r2: 
\series default
position of the first dipole (3d vector)
\end_layout

\begin_layout Itemize

\series bold
knorm: 
\series default
norm of the k vector
\end_layout

\begin_layout Paragraph
Outputs
\end_layout

\begin_layout Standard
The associated (3x3) green tensor.
\end_layout

\begin_layout Subsubsection
solve_DDA_dl()
\end_layout

\begin_layout Standard

\series bold
solve_DDA_dl(knorm, kr, k3alpha, input_field::Function ; output="polarisations",
 solver="LU", verbose=true)
\end_layout

\begin_layout Standard
This function generate the DDA equations systems (equation (7)) with dimensionle
ss inputs and solve it in order to output the polarisations 
\begin_inset Formula $\boldsymbol{P}_{n}$
\end_inset

or the inverse of the linear equation matrix 
\begin_inset Formula $A^{-1}$
\end_inset

.
\end_layout

\begin_layout Paragraph
Arguments
\end_layout

\begin_layout Itemize

\series bold
knorm: 
\series default
norm of the k vector (real scalar).
\end_layout

\begin_layout Itemize

\series bold
kr: 
\series default
real array containing all the (3d) position vectors of the dipoles, multiplied
 with the norm of the k vector
\end_layout

\begin_layout Itemize

\series bold
k3alpha: 
\series default
complex array containing all the (3x3) polarisability tensor of each dipole
 multiplied with norm of the k vector to the power 3.
\end_layout

\begin_layout Itemize

\series bold
input_field: 
\series default
pointer to a function that will generate the input field this function haa.
\end_layout

\begin_layout Itemize

\series bold
output 
\series default
(facultative): it can takes two values: 
\begin_inset Quotes eld
\end_inset

polaristions
\begin_inset Quotes erd
\end_inset

 (the function returns the 
\begin_inset Formula $\boldsymbol{P}_{n}$
\end_inset

) or 
\begin_inset Quotes eld
\end_inset

matrix
\begin_inset Quotes erd
\end_inset

 (the functiuons return the 
\begin_inset Formula $A^{-1}$
\end_inset

).
 By default set to 
\begin_inset Quotes eld
\end_inset

polarisations
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Itemize

\series bold
solver 
\series default
(facultative): indication on which solver to use to solve the equations.
 There is yet only one possibility: 
\begin_inset Quotes eld
\end_inset

LU
\begin_inset Quotes erd
\end_inset

 (use the LU decomposition of LAPACK).
\end_layout

\begin_layout Itemize

\series bold
verbose 
\series default
(facultative): whether to print everything or not.
 By default set to 
\begin_inset Quotes eld
\end_inset

true
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Paragraph
Outputs
\end_layout

\begin_layout Standard
An array of size (N,3) with the polarisations 
\begin_inset Formula $\boldsymbol{P}_{n}$
\end_inset

 or the inverse of the (3N*3N) linear equation matrix 
\begin_inset Formula $A^{-1}$
\end_inset

 (dependint on the 
\series bold
output 
\series default
parameter).
\end_layout

\begin_layout Subsubsection
green_dl()
\end_layout

\begin_layout Standard

\series bold
green_dl(kr1, kr2, knorm)
\end_layout

\begin_layout Standard
This function computes the green tensor with dimensionless inputs using
 equation (6).
\end_layout

\begin_layout Paragraph
Arguments
\end_layout

\begin_layout Itemize

\series bold
kr1: 
\series default
position of the first dipole times the norm of the wave vector (3d vector)
\end_layout

\begin_layout Itemize

\series bold
kr2: 
\series default
position of the first dipole times the norm of the wave vector (3d vector)
\end_layout

\begin_layout Itemize

\series bold
knorm: 
\series default
norm of the k vector (real scalar)
\end_layout

\begin_layout Paragraph
Outputs
\end_layout

\begin_layout Standard
The associated (3x3) green tensor.
\end_layout

\begin_layout Subsection
alpha.jl
\end_layout

\begin_layout Standard
The alpha.jl module is a side-functionality module providing functions to
 compute the polarisability tensors.
\end_layout

\begin_layout Subsubsection
depolarisation_tensor()
\end_layout

\begin_layout Standard

\series bold
depolarisation_tensor(lx,ly,lz,Vn)
\end_layout

\begin_layout Standard
This function computes the depolarisation tensor as in equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:depol"
plural "false"
caps "false"
noprefix "false"

\end_inset

) but for an arbitrary parralelipipedic unit.
\end_layout

\begin_layout Paragraph
Arguments
\end_layout

\begin_layout Itemize

\series bold
lx, ly, lz
\series default
: dimensions of the parralelipipedic volume (scalars).
\end_layout

\begin_layout Itemize

\series bold
Vn: 
\series default
volume of the parralelipipedic unit (scalar).
\end_layout

\begin_layout Paragraph
Outputs
\end_layout

\begin_layout Standard
The (3x3) depolarisation tensor
\end_layout

\begin_layout Subsubsection
alpha_0()
\end_layout

\begin_layout Standard

\series bold
alpha_0(e,e_m,Ln,Vn)
\end_layout

\begin_layout Standard
This function compute the quasistatic polarisability tensor as in equation
 (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:quasis"
plural "false"
caps "false"
noprefix "false"

\end_inset

).
\end_layout

\begin_layout Paragraph
Arguments
\end_layout

\begin_layout Itemize

\series bold
e: 
\series default
dielectric permetivitty of the medium (complex scalar).
\end_layout

\begin_layout Itemize

\series bold
e_m: 
\series default
dielectric permittivity of the embeding medium (complex scalar).
\end_layout

\begin_layout Itemize

\series bold
Ln: 
\series default
depolaristion tensor (3x3 matrix).
\end_layout

\begin_layout Itemize

\series bold
Vn: 
\series default
volume of the particle (scalar)
\end_layout

\begin_layout Paragraph
Outputs
\end_layout

\begin_layout Standard
The associated (3x3 complex) quasistatic polarisability tensor.
\end_layout

\begin_layout Subsubsection
alpha_radiative()
\end_layout

\begin_layout Standard

\series bold
alpha_radiative(a0,knorm)
\end_layout

\begin_layout Standard
This function compute the polarisability tensor with the radiative correction
 with equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:radiative"
plural "false"
caps "false"
noprefix "false"

\end_inset

), given a quasitatic polarisability tensor.
\end_layout

\begin_layout Paragraph
Arguments
\end_layout

\begin_layout Itemize

\series bold
a0: 
\series default
a quasistatic polarisability tensor (3x3 complex)
\end_layout

\begin_layout Itemize

\series bold
knorm: 
\series default
the norm of the k vector (scalar)
\end_layout

\begin_layout Paragraph
Outputs
\end_layout

\begin_layout Standard
The (3x3 complex) polarisability tensor with radisative correction.
\end_layout

\begin_layout Subsection
input_fields.jl
\end_layout

\begin_layout Standard
The input_fields.jl module is a side-functionality module providing functions
 to generate the input fields.
\end_layout

\begin_layout Subsubsection
plane_wave()
\end_layout

\begin_layout Standard

\series bold
plane_wave(knorm,r,khat=[0,0,1],e0=[1,0,0])
\end_layout

\begin_layout Standard
Function to evaluate a plane wave at a given position.
\end_layout

\begin_layout Paragraph
Arguments
\end_layout

\begin_layout Itemize

\series bold
knorm: 
\series default
the norm of the k vector (scalar).
\end_layout

\begin_layout Itemize

\series bold
r: 
\series default
position where to evaluate the plane wave (3d vector).
\end_layout

\begin_layout Itemize

\series bold
khat 
\series default
(faculatitve): direction of the k vector (3d vector).
 The norm of this vector must be 1.
 By default set to the direction of the plane wave.
\end_layout

\begin_layout Itemize

\series bold
e0 
\series default
(facultative): polarisation (3d complex vector).
 By default set to [1,0,0] (polarized on the x axis).
\end_layout

\begin_layout Paragraph
Outputs
\end_layout

\begin_layout Standard
A 3d complex vector representing the plane wave vector at the given position.
\end_layout

\begin_layout Subsubsection
plane_wave_dl()
\end_layout

\begin_layout Standard

\series bold
plane_wave_dl(kr,khat=[0,0,1],e0=[1,0,0])
\end_layout

\begin_layout Standard
Function to evaluate a plane wave at a given position, but with dimensionless
 inputs.
\end_layout

\begin_layout Paragraph
Arguments
\end_layout

\begin_layout Itemize

\series bold
kr: 
\series default
position where to evaluate the plane wave times the norm of the k vector
 (3d vector).
\end_layout

\begin_layout Itemize

\series bold
khat 
\series default
(faculatitve): direction of the k vector (3d vector).
 The norm of this vector must be 1.
 By default set to the direction of the plane wave.
\end_layout

\begin_layout Itemize

\series bold
e0 
\series default
(facultative): polarisation (3d complex vector).
 By default set to [1,0,0] (polarized on the x axis).
\end_layout

\begin_layout Paragraph
Outputs
\end_layout

\begin_layout Standard
A 3d complex vector representing the plane wave vector at the given position.
\end_layout

\begin_layout Subsection
processing.jl
\end_layout

\begin_layout Subsubsection

\series bold
compute_cross_sections
\series default
()
\end_layout

\begin_layout Standard

\series bold
compute_cross_sections(knorm,p,e_inc,alpha0,r;e0=[1,0,0],explicit_scattering=tru
e,verbose=true)
\end_layout

\begin_layout Standard
Compute the extinction, absorbtion and scattering cross sections as done
 in equations (8), (9) and (10) (only for a plane wave illumination!).
 
\end_layout

\begin_layout Paragraph
Arguments
\end_layout

\begin_layout Itemize

\series bold
knorm: 
\series default
the norm of the k vector (scalar).
\end_layout

\begin_layout Itemize

\series bold
p: 
\series default
polarisations (array of 3d complex vectors).
\end_layout

\begin_layout Itemize

\series bold
alpha0 
\series default
(facultative): quasistatic polarisability tensors (array of complex 3x3
 matrices).
\end_layout

\begin_layout Itemize

\series bold
r: 
\series default
real array containing all the (3d) position vectors of the dipoles.
\end_layout

\begin_layout Itemize

\series bold
e0 
\series default
(facultative): polarisation (3d complex vector).
 By default set to [1,0,0] (polarized on the x axis).
\end_layout

\begin_layout Itemize

\series bold
explicit_scattering 
\series default
(facultative): wether to compute the scattering cross section explicitely
 or not.
 Bay default set to true.
\end_layout

\begin_layout Itemize

\series bold
verbose 
\series default
(facultative): whether to print everything or not.
 By default set to 
\begin_inset Quotes eld
\end_inset

true
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Paragraph
Outputs
\end_layout

\begin_layout Standard
an array containing [lambda,Cext, Cabs,Csca]
\end_layout

\begin_layout Section
Test and Example
\end_layout

\begin_layout Standard
DDA computations have been made with a silicon sphere with radius of 230nm,
 with 13000 dipoles, 
\begin_inset Formula $\lambda=1000,...,2000$
\end_inset

nm.
 The script used to run these computation is called 
\series bold
run_DDA.jl
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename ../../DDA/DDA0.1/notes/Silicon_cross_section_13000.png
	width 12cm

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Extinction,scattering and absorbtion cross sections for a silicon sphere
 with radius of 230nm, computed with the DDA.jl code
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename ../../DDA/DDA0.1/notes/Silicon_cross_section_4100.png
	width 12cm

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
relative error of the extinction for the computation of figure 1.
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename ../../DDA/DDA0.1/notes/mieplot.png
	width 15cm

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Extinction,scattering and absorbtion cross sections for a silicon sphere
 with radius of 230nm, computed with Mie theory
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_body
\end_document
